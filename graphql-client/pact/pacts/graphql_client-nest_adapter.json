{
  "consumer": {
    "name": "graphql client"
  },
  "provider": {
    "name": "nest adapter"
  },
  "interactions": [
    {
      "description": "a character request",
      "request": {
        "method": "POST",
        "path": "/graphql",
        "headers": {
          "content-type": "application/json"
        },
        "body": {
          "operationName": "Characters",
          "query": "\n                            query Characters($page: Int = 1){\n                                characters(page: $page){\n                                    count\n                                    results{\n                                        name\n                                        gender\n                                        mass\n                                        height\n                                    }\n                                }\n                            }\n                        ",
          "variables": {
            "page": 1
          }
        },
        "matchingRules": {
          "$.body.query": {
            "match": "regex",
            "regex": "\\s*query\\s*Characters\\(\\$page:\\s*Int\\s*=\\s*1\\)\\{\\s*characters\\(page:\\s*\\$page\\)\\{\\s*count\\s*results\\{\\s*name\\s*gender\\s*mass\\s*height\\s*\\}\\s*\\}\\s*\\}\\s*"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "data": {
            "characters": {
              "count": 82,
              "results": [
                {
                  "name": "Luke Skywalker",
                  "gender": "male",
                  "mass": "77",
                  "height": "172"
                }
              ]
            }
          }
        },
        "matchingRules": {
          "$.body.data.characters.count": {
            "match": "type"
          },
          "$.body.data.characters.results": {
            "min": 1
          },
          "$.body.data.characters.results[*].*": {
            "match": "type"
          },
          "$.body.data.characters.results[*].name": {
            "match": "type"
          },
          "$.body.data.characters.results[*].gender": {
            "match": "type"
          },
          "$.body.data.characters.results[*].mass": {
            "match": "type"
          },
          "$.body.data.characters.results[*].height": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "a ships request",
      "request": {
        "method": "POST",
        "path": "/graphql",
        "headers": {
          "content-type": "application/json"
        },
        "body": {
          "operationName": "Ships",
          "query": "\n                            query Ships($page: Int = 1){\n                                ships(page: $page){\n                                    count\n                                    results{\n                                        name\n                                        length\n                                        crew\n                                        starship_class\n                                    }\n                                }\n                            }\n                        ",
          "variables": {
            "page": 1
          }
        },
        "matchingRules": {
          "$.body.query": {
            "match": "regex",
            "regex": "\\s*query\\s*Ships\\(\\$page:\\s*Int\\s*=\\s*1\\)\\{\\s*ships\\(page:\\s*\\$page\\)\\{\\s*count\\s*results\\{\\s*name\\s*length\\s*crew\\s*starship_class\\s*\\}\\s*\\}\\s*\\}\\s*"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "data": {
            "ships": {
              "count": 36,
              "results": [
                {
                  "name": "CR90 corvette",
                  "length": "150",
                  "crew": "30-165",
                  "starship_class": "corvette"
                }
              ]
            }
          }
        },
        "matchingRules": {
          "$.body.data.ships.count": {
            "match": "type"
          },
          "$.body.data.ships.results": {
            "min": 1
          },
          "$.body.data.ships.results[*].*": {
            "match": "type"
          },
          "$.body.data.ships.results[*].name": {
            "match": "type"
          },
          "$.body.data.ships.results[*].length": {
            "match": "type"
          },
          "$.body.data.ships.results[*].crew": {
            "match": "type"
          },
          "$.body.data.ships.results[*].starship_class": {
            "match": "type"
          }
        }
      }
    }
  ],
  "metadata": {
    "pactSpecification": {
      "version": "2.0.0"
    }
  }
}